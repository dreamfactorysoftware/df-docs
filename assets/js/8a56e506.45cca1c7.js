"use strict";(self.webpackChunkdf_docs=self.webpackChunkdf_docs||[]).push([[959],{1013:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=s(4848),r=s(8453);const o={sidebar_position:2},t="Upgrading to PHP 8.1",a={id:"DreamFactory Upgrades and Migrations/upgrading-to-php-8_1",title:"Upgrading to PHP 8.1",description:"Estimated Upgrade Time: 1.5 Hours",source:"@site/docs/DreamFactory Upgrades and Migrations/upgrading-to-php-8_1.md",sourceDirName:"DreamFactory Upgrades and Migrations",slug:"/DreamFactory Upgrades and Migrations/upgrading-to-php-8_1",permalink:"/DreamFactory Upgrades and Migrations/upgrading-to-php-8_1",draft:!1,unlisted:!1,editUrl:"https://github.com/dreamfactorysoftware/df-docs/tree/main/docs/DreamFactory Upgrades and Migrations/upgrading-to-php-8_1.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"intro",previous:{title:"Upgrading DreamFactory",permalink:"/DreamFactory Upgrades and Migrations/upgrades"},next:{title:"API Creation and Management",permalink:"/API Creation and Management/api-creation-management"}},l={},d=[{value:"Switch to PHP 8.1",id:"switch-to-php-81",level:2},{value:"Configure NGINX",id:"configure-nginx",level:3},{value:"Table of contents",id:"table-of-contents",level:2},{value:"Free Plan",id:"free-plan",level:4},{value:"Paid Plan",id:"paid-plan",level:4},{value:"Cassandra",id:"cassandra",level:3},{value:"Couchbase",id:"couchbase",level:3},{value:"Email",id:"email",level:3},{value:"Firebird",id:"firebird",level:3},{value:"GitHub",id:"github",level:3},{value:"Mongo logs",id:"mongo-logs",level:3},{value:"Apache Hive",id:"apache-hive",level:3},{value:"Azure Active Directory",id:"azure-active-directory",level:3},{value:"IBM Db2",id:"ibm-db2",level:3},{value:"IBM Informix",id:"ibm-informix",level:3},{value:"LDAP &amp; Active Directory",id:"ldap--active-directory",level:3},{value:"MQTT",id:"mqtt",level:3},{value:"Oracle",id:"oracle",level:3},{value:"SAP SQL Anywhere",id:"sap-sql-anywhere",level:3},{value:"Snowflake",id:"snowflake",level:3},{value:"Microsoft SQL Server",id:"microsoft-sql-server",level:3},{value:"Installing the PHP extension",id:"installing-the-php-extension",level:3}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"upgrading-to-php-81",children:"Upgrading to PHP 8.1"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsx)(n.p,{children:"Estimated Upgrade Time: 1.5 Hours"})]}),"\n",(0,i.jsx)(n.p,{children:"DreamFactory is committed to making the shift from PHP 7.2 to PHP 8.1 as simple as possible. Some services have undergone significant changes as a result of third-party API providers. We have compiled a list of all services that have experienced noticeable changes, which you can find below. While it's not necessary to update all of these services, if you are using any of them, we recommend that you review the relevant section to expedite the development of your dream API."}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["This article assumes that you are not using our automatic installers. However, if you have a different operating system or prefer not to handle the installation process manually, you can refer to the relevant guide ",(0,i.jsx)(n.a,{href:"../installing-and-configuring-dreamfactory/#using-the-dreamfactory-installer",children:"here"}),". Note that these steps are intended for those using the ",(0,i.jsx)(n.a,{href:"https://wiki.ubuntu.com/Releases",children:(0,i.jsx)(n.em,{children:"Supported Ubuntu Release"})}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"switch-to-php-81",children:"Switch to PHP 8.1"}),"\n",(0,i.jsx)(n.p,{children:"This section demonstrates how to migrate from PHP 7.4 to PHP 8.1 on Ubuntu 20.04."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Add PPA:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo add-apt-repository ppa:ondrej/php -y\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Install PHP 8.1 and the required dependencies:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install -y php8.1-common \\\r\nphp8.1-xml \\\r\nphp8.1-cli \\\r\nphp8.1-fpm \\\r\nphp8.1-curl \\\r\nphp8.1-mysqlnd \\\r\nphp8.1-sqlite \\\r\nphp8.1-soap \\\r\nphp8.1-mbstring \\\r\nphp8.1-zip \\\r\nphp8.1-bcmath \\\r\nphp8.1-dev \\\r\nphp8.1-ldap \\\r\nphp8.1-pgsql \\\r\nphp8.1-interbase \\\r\nphp8.1-gd \\\r\nphp8.1-sybase\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"After successful installation, manually switch to PHP 8.1:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo update-alternatives --set php /usr/bin/php8.1 \\\r\nsudo update-alternatives --set phar /usr/bin/phar8.1 \\\r\nsudo update-alternatives --set phar.phar /usr/bin/phar.phar8.1 \\\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"Select the version of PHP you need by using:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo update-alternatives --config php\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.p,{children:"If you would like to know how to install the dependencies for the DreamFactory packages that you are interested in, you can refer to the table of contents below for guidance."}),(0,i.jsxs)(n.p,{children:["Command ",(0,i.jsx)(n.code,{children:"pecl install"})," may fail with a message like:"]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"pecl/sqlsrv is already installed and is the same as the released version 5.10.1 install failed"})}),(0,i.jsxs)(n.p,{children:["In this case use force install: ",(0,i.jsx)(n.code,{children:"pecl install -f <extension_name>"})]})]}),"\n",(0,i.jsx)(n.h3,{id:"configure-nginx",children:"Configure NGINX"}),"\n",(0,i.jsxs)(n.p,{children:["If you are using FastCGI Process Manager (FPM) with NGINX or Apache, you must update your DreamFactory installation's host configuration. To update the configuration for NGINX, modify the version of PHP specified in the Nginx server configuration file, which is located at ",(0,i.jsx)(n.code,{children:"/etc/nginx/sites-available/default"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"-fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\r\n+fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now you can update your DreamFactory instance to the latest version."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the ",(0,i.jsx)(n.code,{children:"git pull"})," command from the DreamFactory root directory."]}),"\n",(0,i.jsxs)(n.li,{children:["Next, run the ",(0,i.jsx)(n.code,{children:"composer install"})," command."]}),"\n",(0,i.jsxs)(n.li,{children:["To complete the process, restart ",(0,i.jsx)(n.code,{children:"fpm"})," and ",(0,i.jsx)(n.code,{children:"nginx"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo service php8.1-fpm restart && service nginx restart\n"})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of contents"}),"\n",(0,i.jsx)(n.h4,{id:"free-plan",children:"Free Plan"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#cassandra",children:"Cassandra"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#couchbase",children:"Couchbase"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#email",children:"Email"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#firebird",children:"Firebird"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#github",children:"GitHub"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mongo-logs",children:"Mongo logs"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"paid-plan",children:"Paid Plan"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#apache-hive",children:"Apache Hive"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#azure-active-directory",children:"Azure Active Directory"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ibm-db2",children:"IBM Db2"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ibm-informix",children:"IBM Informix"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ldap--active-directory",children:"LDAP & Active Directory"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mqtt",children:"MQTT"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#oracle",children:"Oracle"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#sap-sql-anywhere",children:"SAP SQL Anywhere"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#snowflake",children:"Snowflake"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#microsoft-sql-server",children:"SQL Server"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cassandra",children:"Cassandra"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsx)(n.p,{children:"To use the Cassandra service, you must recompile the driver and install the client library if you haven\u2019t already."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/datastax/cpp-driver/releases/tag/2.16.2",children:"Download"})," and extract the client library for Apache Cassandra. From the downloaded repository, run the following commands:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt install -y --no-install-recommends libgmp-dev libpcre3-dev libssl-dev libuv1-dev cmake\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir build       &&\\\r\npushd build       &&\\\r\ncmake ..          &&\\\r\nmake              &&\\\r\nsudo make install &&\\\r\npopd\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/nano-interactive/ext-cassandra/tree/v1.3.x",children:"Download"})," the DataStax PHP Driver for Apache Cassandra. ",(0,i.jsx)(n.strong,{children:"Make sure that you are on the 1.3.x branch."})," From the downloaded repository, run the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Currently, we are using a specific version of the repository that is still functional, \r\n# as the recent efforts to enhance the installation process do not work properly.\r\ngit checkout 1cf12c5ce49ed43a2c449bee4b7b23ce02a37bf0 &&\\\r\npushd ext         &&\\\r\nphpize            &&\\\r\npopd              &&\\\r\nmkdir build       &&\\\r\npushd build       &&\\\r\n../ext/configure  &&\\\r\nmake              &&\\\r\nsudo make install &&\\\r\npopd\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Make sure ",(0,i.jsx)(n.code,{children:"cassandra.so"})," is built."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"find /usr/lib/php/20210902/cassandra.so\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"cassandra.so"})," exists, connect it to PHP's modules."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"echo 'extension=cassandra.so' | sudo tee /etc/php/8.1/mods-available/cassandra.ini\r\nsudo phpenmod -v 8.1 -s ALL cassandra\n"})}),"\n",(0,i.jsx)(n.h3,{id:"couchbase",children:"Couchbase"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsx)(n.p,{children:"With the new release of DreamFactory, we removed Couchbase from the list of supported services. There is a possibility that support for Couchbase may be reinstated in a future release."}),"\n",(0,i.jsx)(n.h3,{id:"email",children:"Email"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: Low"})}),"\n",(0,i.jsxs)(n.p,{children:["The Mandrill & SparkPost mail drivers have been ",(0,i.jsx)(n.a,{href:"https://laravel.com/docs/6.x/upgrade",children:"removed from Laravel 6"}),". These services have technically not been supported by DreamFactory since its migration to Laravel 6. For this reasone these services are no longer displayed in the ",(0,i.jsx)(n.strong,{children:"Services"})," tab."]}),"\n",(0,i.jsx)(n.h3,{id:"firebird",children:"Firebird"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsxs)(n.p,{children:["If you are using Firebird with major version 3, then it must be at least version 3.0.4. This is due to usage of the ",(0,i.jsx)(n.a,{href:"https://firebirdsql.org/file/documentation/chunk/en/refdocs/fblangref40/fblangref40-contextvars-localtimestamp.html",children:"LOCALTIMESTAMP parameter"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To use the Firebird service, you need to install/recompile a driver compatible with PHP 8.1. Use ",(0,i.jsx)(n.a,{href:"https://www.php.net/manual/en/ref.pdo-firebird.php",children:(0,i.jsx)(n.code,{children:"--with-pdo-firebird"})})," to install the PDO Firebird extension or install ",(0,i.jsx)(n.code,{children:"php81-interbase"})," package from ",(0,i.jsxs)(n.a,{href:"#installing-the-php-extension",children:["ppa",":ondrej","/php"]}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"github",children:"GitHub"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: Medium"})}),"\n",(0,i.jsxs)(n.p,{children:["DreamFactory provided the ability to authenticate through the REST API using an account password or personal access token to perform authenticated API operations on GitHub.com. Beginning November 13th, 2020, GitHub announced that they no longer accept account passwords when authenticating via the REST API and require the use of token-based authentication. If you have a registered DreamFactory GitHub service, ensure to specify a personal access token. For more information, follow the Deprecating password authentication information found ",(0,i.jsx)(n.a,{href:"https://developer.github.com/changes/2020-02-14-deprecating-password-auth/",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"mongo-logs",children:"Mongo logs"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: Low"})}),"\n",(0,i.jsxs)(n.p,{children:["DreamFactory supports a very simple solution for logging all requests. All records requested in the API are written to the database. The implication is that DreamFactory relies on ",(0,i.jsx)(n.a,{href:"https://www.mongodb.com/docs/drivers/php/",children:"MongoDB PHP driver"}),". You can easily install the required dependency with ",(0,i.jsx)(n.a,{href:"https://pecl.php.net/package/mongodb",children:"pecl"}),". After that, run these two commands:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo 'extension=mongodb.so' | sudo tee /etc/php/8.1/mods-available/mongodb.ini\r\nsudo phpenmod -s ALL mongodb\n"})}),"\n",(0,i.jsx)(n.h3,{id:"apache-hive",children:"Apache Hive"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsxs)(n.p,{children:["In order to use the service, you must have both the ",(0,i.jsx)(n.a,{href:"https://www.php.net/manual/en/pdo.installation.php",children:"PDO"})," and ",(0,i.jsx)(n.a,{href:"https://www.php.net/manual/en/odbc.installation.php",children:"ODBC"})," PHP extensions installed, which are available for download from ",(0,i.jsx)(n.a,{href:"#installing-the-php-extension",children:"this PPA"})," with the names ",(0,i.jsx)(n.code,{children:"php8.1-pdo"})," and ",(0,i.jsx)(n.code,{children:"php8.1-odbc"}),", respectively. Additionally, the MapR ODBC Driver must be installed, which you can obtain by downloading from this ",(0,i.jsx)(n.a,{href:"https://docs.datafabric.hpe.com/70/Hive/install-hive_odbc_connector_linux.html",children:"link"})," or through the Amazon cloud, as we do. To install MapR ODBC Driver run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd /opt \\\r\n&& sudo curl --fail -O https://odbc-drivers.s3.amazonaws.com/apache-hive/maprhiveodbc_2.6.1.1001-2_amd64.deb \\\r\n&& sudo dpkg -i maprhiveodbc_2.6.1.1001-2_amd64.deb \\\r\n&& test -f /opt/mapr/hiveodbc/lib/64/libmaprhiveodbc64.so \\\r\n&& rm maprhiveodbc_2.6.1.1001-2_amd64.deb\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note that it's crucial to install the extension using a specific path. So the full path to the driver must be - ",(0,i.jsx)(n.code,{children:"/opt/mapr/hiveodbc/lib/64/libmaprhiveodbc64.so"})]}),"\n",(0,i.jsx)(n.h3,{id:"azure-active-directory",children:"Azure Active Directory"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: Low"})}),"\n",(0,i.jsxs)(n.p,{children:["Microsoft announced that Azure AD Graph has been deprecated as of June 30, 2023. For this reason, DreamFactory migrated towards Microsoft Graph. For more information, follow the details available ",(0,i.jsx)(n.a,{href:"https://techcommunity.microsoft.com/t5/microsoft-entra-azure-ad-blog/microsoft-entra-change-announcements-september-2022-train/ba-p/2967454",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"ibm-db2",children:"IBM Db2"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsxs)(n.p,{children:["DreamFactory services that work with IBM databases use software that can be loaded from ",(0,i.jsx)(n.a,{href:"https://www.ibm.com/us-en/",children:"ibm.com"}),". This section is appointed for a self-hosted environment. To make DreamFactory work with the IBM Db2, you need to complete the following steps:"]}),"\n",(0,i.jsxs)(n.p,{children:["Sign in to your ",(0,i.jsx)(n.a,{href:"https://www.ibm.com/us-en/",children:"IBM"})," account, or create a new one. Download the client driver package:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://epwt-www.mybluemix.net/software/support/trial/cst/programwebsite.wss?siteId=853&h=null&p=null",children:"https://epwt-www.mybluemix.net/software/support/trial/cst/programwebsite.wss?siteId=853&h=null&p=null"})}),"\n",(0,i.jsxs)(n.p,{children:["Extract the downloaded file. From the \u201cdsdriver\u201d subdirectory, generate \u201c",(0,i.jsx)(n.em,{children:"db2profile"}),"\u201d and \u201c",(0,i.jsx)(n.em,{children:"db2cshrc"}),"\u201d script files:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo -s \\\r\n&& tar -xvf ibm_data_server_driver_package_linuxx64_v11.5.tar.gz -C /opt/ \\\r\n&& cd /opt/dsdriver \\\r\n&& apt install -y ksh \\\r\n&& ./installDSDriver\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set the environment variables using:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"source db2profile (for the Bash or Korn shell)\r\nsource db2cshrc (for the C shell)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Clone the PDO_IBM ",(0,i.jsx)(n.a,{href:"https://github.com/php/pecl-database-pdo_ibm",children:"source code from GitHub"}),". ",(0,i.jsx)(n.strong,{children:"Note that this must be done from the same terminal since db2profile | db2cshrc sets the environment variables in the current terminal session."})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/php/pecl-database-pdo_ibm /opt/PDO_IBM && \\\r\ncd /opt/PDO_IBM\n"})}),"\n",(0,i.jsx)(n.p,{children:"From the cloned repository run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export CPATH=/opt/dsdriver/include\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"phpize \\\r\n&& ./configure --with-pdo-ibm=/opt/dsdriver \\\r\n&& make \\\r\n&& make install \\\r\n&& exit\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Check for the presence of ",(0,i.jsx)(n.code,{children:"pdo_ibm.so"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'find "/usr/lib/php/20210902/pdo_ibm.so"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"pdo_ibm.so"})," exists, connect it to PHP's modules:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo 'extension=pdo_ibm.so' | sudo tee /etc/php/8.1/mods-available/pdo_ibm.ini && \\\r\nsudo phpenmod -v 8.1 -s ALL pdo_ibm\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ibm-informix",children:"IBM Informix"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsxs)(n.p,{children:["DreamFactory services that work with IBM databases use software that can be loaded from ",(0,i.jsx)(n.a,{href:"https://www.ibm.com/us-en/",children:"ibm.com"}),". This section is appointed for a self-hosted environment. To make DreamFactory work with the IBM Informix, you need to take the following steps:"]}),"\n",(0,i.jsxs)(n.p,{children:["Sign in to your ",(0,i.jsx)(n.a,{href:"https://www.ibm.com/us-en/",children:"IBM"})," account or create a new one. Download the ",(0,i.jsx)(n.a,{href:"https://www.ibm.com/support/pages/informix-client-software-development-kit-client-sdk-and-informix-connect-system-requirements",children:"Informix Client SDK"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("u",{children:"Download Informix Client SDK"})," \u279c ",(0,i.jsx)("u",{children:"IBM Informix Client SDK downloads"})," \u279c ",(0,i.jsx)(n.em,{children:"Fill out the form"})," \u279c ",(0,i.jsx)(n.em,{children:"Select appropriate version"})," \u279c ",(0,i.jsx)(n.em,{children:"Download tar file"})]}),"\n",(0,i.jsxs)(n.p,{children:["SDK may require you to install ",(0,i.jsx)(n.code,{children:"libncurses.so.5"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo add-apt-repository universe\r\nsudo apt update\r\nsudo apt install libncurses5 libncurses5:i386\n"})}),"\n",(0,i.jsx)(n.p,{children:"Extract and install the SDK:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo -s\r\ntar -xvf your_archive\r\n./installclientsdk\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now we have two options to install ",(0,i.jsx)(n.code,{children:"pdo_informix.so"}),": using ",(0,i.jsx)(n.code,{children:"pecl"})," or by building it manually. We prefer the second method since we have had limited success with the ",(0,i.jsx)(n.code,{children:"pecl"})," method."]}),"\n",(0,i.jsxs)(n.p,{children:["Download the ",(0,i.jsx)(n.a,{href:"https://pecl.php.net/package/pdo_informix",children:"PDO_INFORMIX"})," archive and extract it. From the extracted ",(0,i.jsx)(n.em,{children:"PDO_INFORMIX-1.3.x"})," folder run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"phpize \\\r\n&& ./configure --with-pdo-informix=/opt/IBM/Informix_Client-SDK \\\r\n&& make \\\r\n&& make install \\\r\n&& exit\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you decide to test your luck, and install ",(0,i.jsx)(n.a,{href:"https://pecl.php.net/package/pdo_informix",children:"PDO_INFORMIX"})," using ",(0,i.jsx)(n.code,{children:"pecl"}),", run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo pecl install PDO_INFORMIX\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Set the environment variables in ",(0,i.jsx)(n.code,{children:".profile"}),", and open the file for editing with:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo nano ~/.profile\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add the following lines to the bottom of the file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/opt/IBM/Informix_Client-SDK/lib:/opt/IBM/Informix_Client-SDK/lib/esql" \r\nexport INFORMIXDIR="/opt/IBM/Informix_Client-SDK"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Make sure ",(0,i.jsx)(n.code,{children:"pdo_informix.so"})," is built using:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"find /usr/lib/php/20210902/pdo_informix.so\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"pdo_informix.so"})," exists, connect it to PHP's modules with:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo 'extension=pdo_informix.so' | sudo tee /etc/php/8.1/mods-available/pdo_informix.ini && \\\r\nsudo phpenmod -v 8.1 -s ALL pdo_informix\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ldap--active-directory",children:"LDAP & Active Directory"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: Low"})}),"\n",(0,i.jsxs)(n.p,{children:["DreamFactory uses ",(0,i.jsx)(n.a,{href:"https://www.php.net/manual/en/book.ldap.php",children:"Lightweight Directory Access Protocol"})," to lookup information or devices within a network. Therefore, to continue working with these services, you need to install the LDAP ",(0,i.jsx)(n.a,{href:"https://www.php.net/manual/en/ldap.installation.php",children:"extension"})," for the new version of PHP. For a quick setup, see the ",(0,i.jsx)(n.a,{href:"#installing-the-php-extension",children:"'Installing the PHP extension'"})," section."]}),"\n",(0,i.jsx)(n.h3,{id:"mqtt",children:"MQTT"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: Low"})}),"\n",(0,i.jsxs)(n.p,{children:["Previously, the MQTT service relied on the ",(0,i.jsx)(n.a,{href:"https://github.com/mgdm/Mosquitto-PHP",children:"Mosquitto-PHP"})," extension, which in turn relies upon the ",(0,i.jsx)(n.a,{href:"https://mosquitto.org/",children:"libmosquitto"})," library. This service no longer depends on the system's needs and contains everything needed to work on its own."]}),"\n",(0,i.jsx)(n.h3,{id:"oracle",children:"Oracle"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["This section shows the minimum number of steps to set up required dependencies so that DreamFactory can work with Oracle. For a complete setup, follow the ",(0,i.jsx)(n.a,{href:"https://www.oracle.com/database/technologies/releasenote-odbc-ic.html",children:"official guide"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["To use the Oracle service, you need to install the new version of the ",(0,i.jsx)(n.code,{children:"oci8"})," extension compatible with PHP 8.1. You can seamlessly install the required extension version you need via ",(0,i.jsx)(n.a,{href:"https://pecl.php.net/package/oci8",children:"pecl"}),". But before installation, you need to go through a few more steps:"]}),"\n",(0,i.jsx)(n.p,{children:"Download the desired Instant Client and the corresponding SDK Package. This example uses the RPM packages."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.oracle.com/database/technologies/instant-client/downloads.html",children:"https://www.oracle.com/database/technologies/instant-client/downloads.html"})}),"\n",(0,i.jsx)(n.p,{children:"Install the necessary dependencies using:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt install -y alien libaio1\n"})}),"\n",(0,i.jsx)(n.p,{children:"Install the Oracle client packages, which can take a few minutes, with this command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo alien -i oracle-instantclient-basic-21.9.0.0.0-1.el8.x86_64.rpm\r\nsudo alien -i oracle-instantclient-devel-21.9.0.0.0-1.el8.x86_64.rpm\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now you are ready to install the ",(0,i.jsx)(n.code,{children:"oci8"})," extension. The latest version is compatible with PHP 8.1 at present, but you may need to specify the version explicitly."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo pecl install oci8 (php 8.1 exactly what we need)\r\nsudo pecl install oci8-2.2.0 (php 7)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Once complete, make sure that OCI is loaded:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"php -m | grep oci8\r\n\r\n#oci8\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you do not see ",(0,i.jsx)(n.code,{children:"oci8"})," in PHP's modules, ensure that the configuration file and the OCI shared library file are plugged in."]}),"\n",(0,i.jsxs)(n.p,{children:["Check for the presence of ",(0,i.jsx)(n.code,{children:"osi8.so"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'find "/usr/lib/php/20210902/oci8.so"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"osi8.so"})," exists, connect it to PHP's modules by running:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"echo 'extension=oci8.so' | sudo tee /etc/php/8.1/mods-available/oci8.ini && \\\r\nsudo phpenmod -v 8.1 -s ALL oci8\n"})}),"\n",(0,i.jsx)(n.h3,{id:"sap-sql-anywhere",children:"SAP SQL Anywhere"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["We have an ",(0,i.jsx)(n.a,{href:"http://localhost:1313/docs/installing-and-configuring-dreamfactory/#installing-the-pdo-and-pdo_dblib-extensions",children:"article"})," on installing the necessary dependencies for SQL Anywhere on CentOS."]})}),"\n",(0,i.jsxs)(n.p,{children:["To complete this process, install the Sybase module from PPA. See the ",(0,i.jsx)(n.a,{href:"#installing-the-php-extension",children:"how to add PPA to your Apt repositories"})," section. This package provides ",(0,i.jsx)(n.code,{children:"php8.1-pdo-dblib"}),", which is what is needed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt install php8.1-sybase\n"})}),"\n",(0,i.jsx)(n.p,{children:"Once complete, make sure that the driver is installed successfully. Confirm both PDO and the pdo_dblib extensions are present:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"php -m\r\n...\r\n#PDO\r\n#pdo_dblib\r\n...\n"})}),"\n",(0,i.jsx)(n.h3,{id:"snowflake",children:"Snowflake"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsxs)(n.p,{children:["To use the Snowflake service, you need to recompile the ",(0,i.jsx)(n.code,{children:"pdo_snowflake"})," driver using the new PHP version. After completion, make sure the module is installed into the proper extensions directory. For more infomation you can access the official guide ",(0,i.jsx)(n.a,{href:"https://github.com/snowflakedb/pdo_snowflake",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"microsoft-sql-server",children:"Microsoft SQL Server"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Likelihood Of Impact: High"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"To use a Microsoft SQL Server database, you should ensure that you have the sqlsrv and pdo_sqlsrv PHP extensions installed, as well as any dependencies they may require such as the Microsoft SQL ODBC driver."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Install ODBC libraries for UNIX from the ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/windows-server/administration/linux-package-repository-for-microsoft-software",children:"Microsoft repository"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt install -y unixodbc-dev\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you are encountering issues with the ",(0,i.jsx)(n.code,{children:"unixodbc-dev"})," package, it may be due to a recent release. As a workaround, you can lock the package version to a stable one (e.g. v2.3.7) until a fix is released. For more details, refer to the relevant ",(0,i.jsx)(n.a,{href:"https://github.com/microsoft/linux-package-repositories/issues/36",children:"issue"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Install ",(0,i.jsx)(n.a,{href:"https://pecl.php.net/package/sqlsrv",children:"sqlsrv"})," and ",(0,i.jsx)(n.a,{href:"https://pecl.php.net/package/pdo_sqlsrv",children:"pdo_sqlsrv"})," from pecl:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo pecl install sqlsrv\r\nsudo pecl install pdo_sqlsrv\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Check for the presence of ",(0,i.jsx)(n.code,{children:"sqlsrv"})," and ",(0,i.jsx)(n.code,{children:"pdo_sqlsrv"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'find "/usr/lib/php/20210902/sqlsrv.so"\r\nfind "/usr/lib/php/20210902/pdo_sqlsrv.so"\n'})}),"\n",(0,i.jsx)(n.p,{children:"If you get both SO files, connect it to PHP's modules:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"echo 'extension=sqlsrv.so' | sudo tee /etc/php/8.1/mods-available/sqlsrv.ini\r\nsudo phpenmod -v 8.1 -s ALL sqlsrv\r\n\r\necho 'extension=pdo_sqlsrv.so' | sudo tee /etc/php/8.1/mods-available/pdo_sqlsrv.ini\r\nsudo phpenmod -v 8.1 -s ALL pdo_sqlsrv\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Finally, install the Microsoft ODBC driver for SQL Server following the ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver16#ubuntu18",children:"official guide"}),", or using the ",(0,i.jsx)(n.a,{href:"https://pkgs.org/search/?q=msodbcsql",children:"Microsoft repository"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"installing-the-php-extension",children:"Installing the PHP extension"}),"\n",(0,i.jsxs)(n.p,{children:["Installation of the necessary dependencies can be quite an agonizing process, so concerned people make this process as painless as possible. ",(0,i.jsx)(n.a,{href:"https://deb.sury.org/",children:"Ond\u0159ej Sur\xfd"})," maintains the repository with PHP packages and is a very well-respected contributor to the PHP community. See how you can install the required PHP dependencies in three easy steps."]}),"\n",(0,i.jsxs)(n.p,{children:["First add ",(0,i.jsx)(n.a,{href:"https://launchpad.net/~ondrej/+archive/ubuntu/php",children:(0,i.jsx)(n.code,{children:"ppa:ondrej/php"})})," to our APT repositories with:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo add-apt-repository ppa:ondrej/php\n"})}),"\n",(0,i.jsx)(n.p,{children:"Update list of available packages:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt update\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Install the required dependency. In this example, we demonstrate the installation of the ",(0,i.jsx)(n.a,{href:"https://www.php.net/manual/en/book.ldap.php",children:"LDAP"})," extension:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt install php8.1-ldap\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);